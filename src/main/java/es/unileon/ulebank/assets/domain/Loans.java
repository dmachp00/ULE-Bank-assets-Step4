package es.unileon.ulebank.assets.domain;

// Generated Jun 15, 2014 6:36:38 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorType;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import es.unileon.ulebank.account.Account;
import es.unileon.ulebank.assets.Loan;
import es.unileon.ulebank.assets.strategy.loan.ScheduledPayment;
import es.unileon.ulebank.client.Client;
import es.unileon.ulebank.handler.GenericHandler;
import es.unileon.ulebank.handler.Handler;

/**
 * Loans generated by hbm2java
 */
@Entity
@Table(name = "LOANS", catalog = "ULEBANK_FINAL")
@DiscriminatorColumn(name = "discriminator", discriminatorType = DiscriminatorType.STRING)
@DiscriminatorValue("Loans")
public class Loans implements java.io.Serializable {

    private String id;
    private Client clients;
    private Handler genericHandler;
    private Account accounts;
    private String paymentPeriod;
    private double interest;
    private double initialCapital;
    private int amortizationTime;
    private double debt;
    private String strategyLoan;
    private double amortized;
    private int numFees;
    private double periodFee;
    private Date creatingDate;
    private String description;
    private Double rateInterest;
    private String recalcInterest;
    private Double lastInterest;
    private String discriminator;

    public Loans(Loan loan, String discriminator) {
        this.accounts = loan.getAccount();
        this.amortizationTime = loan.getAmortizationTime();
        this.clients = loan.getClient();
        this.description = loan.getDescription();
        this.genericHandler = loan.getId();
        this.paymentPeriod = loan.getPaymentPeriod().name();
        this.interest = loan.getInterest();
        this.initialCapital = loan.getInitialCapital();
        this.debt = loan.getDebt();

        String strategyType = loan.getStrategyName();
        if (strategyType.equalsIgnoreCase("FrenchMethod")) {
            this.strategyLoan = "FrenchMethod";
        } else if (strategyType.equalsIgnoreCase("AmericanMethod")) {
            this.strategyLoan = "AmericanMethod";
        } else if (strategyType.equalsIgnoreCase("GermanMethod")) {
            this.strategyLoan = "GermanMethod";
        } else if (strategyType.equalsIgnoreCase("ItalianMethod")) {
            this.strategyLoan = "ItalianMethod";
        } else if (strategyType.equalsIgnoreCase("ProgressiveMethod")) {
            this.strategyLoan = "ProgressiveMethod";
        } else if (strategyType.equalsIgnoreCase("DefaultLoanStrategy")) {
            this.strategyLoan = "DefaultLoanStrategy";
        }

        this.amortized = loan.getAmortized();
        this.periodFee = loan.getPeriodFee();
        this.creatingDate = loan.getCreatinngDate();
        this.discriminator = discriminator;

        List<ScheduledPayment> list = loan.getPayments();
        this.numFees = 0;
        for (ScheduledPayment payment : list) {
            if (!payment.isPaid()) {
                this.numFees++;
            }
        }
    }

    public Loans(Client clients, GenericHandler genericHandler,
            Account accounts, String paymentPeriod, double interest,
            double initialCapital, int amortizationTime, double debt,
            String strategyLoan, double amortized, int fees, double periodFee,
            Date creatingDate, String description, String discriminator) {
        this.clients = clients;
        this.genericHandler = genericHandler;
        this.accounts = accounts;
        this.paymentPeriod = paymentPeriod;
        this.interest = interest;
        this.initialCapital = initialCapital;
        this.amortizationTime = amortizationTime;
        this.debt = debt;
        this.strategyLoan = strategyLoan;
        this.amortized = amortized;
        this.numFees = fees;
        this.periodFee = periodFee;
        this.creatingDate = creatingDate;
        this.description = description;
        this.discriminator = discriminator;
    }

    public Loans(Client clients, GenericHandler genericHandler,
            Account accounts, String paymentPeriod, double interest,
            double initialCapital, int amortizationTime, double debt,
            String strategyLoan, double amortized, int fees, double periodFee,
            Date creatingDate, String description, Double rateInterest,
            String recalcInterest, Double lastInterest, String discriminator) {
        this.clients = clients;
        this.genericHandler = genericHandler;
        this.accounts = accounts;
        this.paymentPeriod = paymentPeriod;
        this.interest = interest;
        this.initialCapital = initialCapital;
        this.amortizationTime = amortizationTime;
        this.debt = debt;
        this.strategyLoan = strategyLoan;
        this.amortized = amortized;
        this.numFees = fees;
        this.periodFee = periodFee;
        this.creatingDate = creatingDate;
        this.description = description;
        this.rateInterest = rateInterest;
        this.recalcInterest = recalcInterest;
        this.lastInterest = lastInterest;
        this.discriminator = discriminator;
    }

    @GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "genericHandler"))
    @Id
    @GeneratedValue(generator = "generator")
    @Column(name = "id", unique = true, nullable = false, length = 64)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "client_id", nullable = false)
    public Client getClient() {
        return this.clients;
    }

    public void setClient(Client clients) {
        this.clients = clients;
    }

    @OneToOne(fetch = FetchType.LAZY)
    @PrimaryKeyJoinColumn
    public Handler getGenericHandler() {
        return this.genericHandler;
    }

    public void setGenericHandler(Handler genericHandler) {
        this.genericHandler = genericHandler;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "account_number", nullable = false)
    public Account getAccounts() {
        return this.accounts;
    }

    public void setAccounts(Account accounts) {
        this.accounts = accounts;
    }

    @Column(name = "payment_period", nullable = false, length = 64)
    public String getPaymentPeriod() {
        return this.paymentPeriod;
    }

    public void setPaymentPeriod(String paymentPeriod) {
        this.paymentPeriod = paymentPeriod;
    }

    @Column(name = "interest", nullable = false, precision = 22, scale = 0)
    public double getInterest() {
        return this.interest;
    }

    public void setInterest(double interest) {
        this.interest = interest;
    }

    @Column(name = "initial_capital", nullable = false, precision = 22, scale = 0)
    public double getInitialCapital() {
        return this.initialCapital;
    }

    public void setInitialCapital(double initialCapital) {
        this.initialCapital = initialCapital;
    }

    @Column(name = "amortization_time", nullable = false)
    public int getAmortizationTime() {
        return this.amortizationTime;
    }

    public void setAmortizationTime(int amortizationTime) {
        this.amortizationTime = amortizationTime;
    }

    @Column(name = "debt", nullable = false, precision = 22, scale = 0)
    public double getDebt() {
        return this.debt;
    }

    public void setDebt(double debt) {
        this.debt = debt;
    }

    @Column(name = "strategy_loan", nullable = false, length = 64)
    public String getStrategyLoan() {
        return this.strategyLoan;
    }

    public void setStrategyLoan(String strategyLoan) {
        this.strategyLoan = strategyLoan;
    }

    @Column(name = "amortized", nullable = false, precision = 22, scale = 0)
    public double getAmortized() {
        return this.amortized;
    }

    public void setAmortized(double amortized) {
        this.amortized = amortized;
    }

    @Column(name = "fees", nullable = false)
    public int getFees() {
        return this.numFees;
    }

    public void setFees(int fees) {
        this.numFees = fees;
    }

    @Column(name = "period_fee", nullable = false, precision = 22, scale = 0)
    public double getPeriodFee() {
        return this.periodFee;
    }

    public void setPeriodFee(double periodFee) {
        this.periodFee = periodFee;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "creating_date", nullable = false, length = 19)
    public Date getCreatingDate() {
        return this.creatingDate;
    }

    public void setCreatingDate(Date creatingDate) {
        this.creatingDate = creatingDate;
    }

    @Column(name = "description", nullable = false, length = 512)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "rate_interest", precision = 22, scale = 0)
    public Double getRateInterest() {
        return this.rateInterest;
    }

    public void setRateInterest(Double rateInterest) {
        this.rateInterest = rateInterest;
    }

    @Column(name = "recalc_interest", length = 64)
    public String getRecalcInterest() {
        return this.recalcInterest;
    }

    public void setRecalcInterest(String recalcInterest) {
        this.recalcInterest = recalcInterest;
    }

    @Column(name = "last_interest", precision = 22, scale = 0)
    public Double getLastInterest() {
        return this.lastInterest;
    }

    public void setLastInterest(Double lastInterest) {
        this.lastInterest = lastInterest;
    }

    @Column(name = "discriminator", nullable = false, length = 20)
    public String getDiscriminator() {
        return this.discriminator;
    }

    public void setDiscriminator(String discriminator) {
        this.discriminator = discriminator;
    }


}
