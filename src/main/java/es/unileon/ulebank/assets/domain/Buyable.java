package es.unileon.ulebank.assets.domain;

// Generated Jun 15, 2014 6:36:38 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import es.unileon.ulebank.Employee;

/**
 * Buyable generated by hbm2java
 */
@Entity
@Table(name = "BUYABLE", catalog = "ULEBANK_FINAL")
public class Buyable implements java.io.Serializable {

	private String id;
	private Employee employee;
	private GenericHandler genericHandler;
	private Fees fees;
	private long amount;
	private int purchasedAmount;
	private double totalPrice;
	private Double profitability;
	private String discriminator;

	public Buyable() {
	}

	public Buyable(GenericHandler genericHandler, long amount,
			int purchasedAmount, double totalPrice, String discriminator) {
		this.genericHandler = genericHandler;
		this.amount = amount;
		this.purchasedAmount = purchasedAmount;
		this.totalPrice = totalPrice;
		this.discriminator = discriminator;
	}

	public Buyable(Employee employee, GenericHandler genericHandler, Fees fees,
			long amount, int purchasedAmount, double totalPrice,
			Double profitability, String discriminator) {
		this.employee = employee;
		this.genericHandler = genericHandler;
		this.fees = fees;
		this.amount = amount;
		this.purchasedAmount = purchasedAmount;
		this.totalPrice = totalPrice;
		this.profitability = profitability;
		this.discriminator = discriminator;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "genericHandler"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false, length = 64)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "employee_id")
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public GenericHandler getGenericHandler() {
		return this.genericHandler;
	}

	public void setGenericHandler(GenericHandler genericHandler) {
		this.genericHandler = genericHandler;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fee_id")
	public Fees getFees() {
		return this.fees;
	}

	public void setFees(Fees fees) {
		this.fees = fees;
	}

	@Column(name = "amount", nullable = false)
	public long getAmount() {
		return this.amount;
	}

	public void setAmount(long amount) {
		this.amount = amount;
	}

	@Column(name = "purchased_amount", nullable = false)
	public int getPurchasedAmount() {
		return this.purchasedAmount;
	}

	public void setPurchasedAmount(int purchasedAmount) {
		this.purchasedAmount = purchasedAmount;
	}

	@Column(name = "total_price", nullable = false, precision = 22, scale = 0)
	public double getTotalPrice() {
		return this.totalPrice;
	}

	public void setTotalPrice(double totalPrice) {
		this.totalPrice = totalPrice;
	}

	@Column(name = "profitability", precision = 22, scale = 0)
	public Double getProfitability() {
		return this.profitability;
	}

	public void setProfitability(Double profitability) {
		this.profitability = profitability;
	}

	@Column(name = "discriminator", nullable = false, length = 20)
	public String getDiscriminator() {
		return this.discriminator;
	}

	public void setDiscriminator(String discriminator) {
		this.discriminator = discriminator;
	}

}
